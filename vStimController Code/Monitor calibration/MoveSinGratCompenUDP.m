function MoveSinGratCompenUDP(window)    global Distance Remote_IP Remote_Port Local_IP Local_Port;    global Para_front Para_subpanel Para_6x8 Para_11x11 Para_Noise Para_FlGrat Para_MvSinGratCompen Para_ManualBar Para_MvSinGratMod Para_Trigger Para_FlashBar...           Para_MoveBar Para_MoveSquBar;        %parameters for the 6x8 grid. parameters for the 11x11 grid.    global Xpos Ypos  Dx11 Dy11;   %Xpos Ypos, the center of RF in 6x8 mapping;Dx11 Dy11, the offset of 11x11    global FrontRect SubpanMVRect SubpanFLBarRect; % buttons to change Xpos and Ypos and dx and dy and squsize    global Winwidth Winheight FR Dispwidth Dispheight Para_Monitor ScrnNum PixelSize DisplayFrameWidth; % the dimension of window in pixel and Framerate and the dimension of display in mtry    Synch=0; %sychonized with eye tracking or not; 1, synchronize; 0, not    white=Para_Monitor.AmpFactor*255^Para_Monitor.GammaFactor; % max luminance in cd/m2    black=0; % min luminance in cd/m2    echoudp('off');    warning('off');    udpB = udp(Remote_IP,Remote_Port,'LocalPort',Local_Port, 'Timeout', 43200);  %Timeout is the time (in sec) to wait to receive data    fopen(udpB);    Screen('TextSize',window,round(Para_subpanel.SizeofText*1.2));    Screen('DrawText',window,'Waiting for starting the control computer...',0,0,Para_subpanel.maxpixel);    Screen('Flip', window);    if Synch        paras=fscanf(udpB,'ALL_SFQ%fTFQ%fCON%fDRN%dTBF%dTDR%dTAF%dTTI%dTTE%dMNL%f\n');        SpatFreqDeg=paras(1);        TempFreq=paras(2);        Contrast=paras(3);  % Contrast = amplitude/mean luminance = (max lum-min lum)/(max lum+min lum)        dirindex=paras(4);        Tbefore=paras(5);  % time in ms before trigger. the sequence is  [Tbefore, Ttriginit, Tduring, Ttrigend, Tafter]         Tduring=paras(6);  %time in ms of VS        Tafter=paras(7);   %time in ms after trigger        Ttriginit=paras(8);%time in ms before VS        Ttrigend=paras(9); %time in ms after VS        MeanLum=paras(10);  % mean luminance unit cd/m2        fprintf(udpB,'Para DONE');    else         SpatFreqDeg=0.1;        TempFreq=2;        Contrast=1;        dirindex=0;        Tbefore=500;  % time in ms before trigger. the sequence is  [Tbefore, Ttriginit, Tduring, Ttrigend, Tafter]         Tduring=5000;  %time in ms of VS        Tafter=1000;   %time in ms after trigger        Ttriginit=-200;%time in ms before VS        Ttrigend=200; %time in ms after VS        MeanLum=(white+black)/2; % mean luminance unit cd/m2    end    set(udpB,'DatagramTerminateMode','off');    Screen('DrawText',window,'Control computer is ready',0,0,Para_subpanel.maxpixel);    Screen('Flip', window);    set(udpB, 'Timeout', 0);    while 1        if Synch            comm=fscanf(udpB,'%c',3);        else            comm='STR';        end        [mX, mY, buttons] = GetMouse;        if buttons(2)            Priority(0);             ShowCursor;            break;        end        if ~isempty(comm)            switch comm                case 'STR'                    if Synch                        fprintf(udpB,'VS is running');                    end                    WholeWinwidth=Winwidth;                    WinWidthofEachdisp=Winwidth/ScrnNum;                    x=1:WinWidthofEachdisp;                    pixelangle=zeros(3,WinWidthofEachdisp);                    texdata1D=pixelangle;                    pixelangle(1,:)=45+atand((x-WinWidthofEachdisp/2)*PixelSize(1)*2/DisplayFrameWidth); % the angle in degree of each pixel for the left monitor;                    pixelangle(2,:)=90+pixelangle(1,:); % the angle in degree of each pixel for the middle monitor;                    pixelangle(3,:)=180+pixelangle(1,:); % the angle in degree of each pixel for the right monitor;                    rectwin=[0 0 WinWidthofEachdisp*3 Winheight];                    trigger_squ(1) =  Screen('MakeTexture', window,zeros([Para_Trigger.Size Para_Trigger.Size])+Para_Trigger.Bright); % give the highest contrast                    trigger_squ(2) = Screen('MakeTexture', window,zeros([Para_Trigger.Size Para_Trigger.Size]));                    Screen('Screens');	% Make sure all Rushed functions are in memory.                    HideCursor;                    priorityLevel=MaxPriority(window);                    Priority(priorityLevel);                    parachange=0;                    comm='';                    while 1    %start of stimulation cycle                        switch parachange                            case 0                                gray=MeanLum;                                inc=gray*Contrast;%%%%%% amplitude of sinusoidal function in luminance cd/m2 need to validate contrast in labview eye-tracking program                                frames=round(FR/TempFreq);% frames of one cycle                                phase=(1:frames)/frames*2*pi;  %in radius                                %%calculate one cycle of frames for 3 monitors                                for k = 1:frames                                    % the sinusoidal funtion is m=sin(angle+phase(k)); angle is refered to                                    % the line which connects the monitor pixel with the mouse eye      m=gray+inc*sin(pixelangle*SpatFreqDeg*2*pi+phase(k)); %the luminance for the spatial angle of each corresponding pixel                                        texdata1D =exp(log((gray+inc*sin(pixelangle*SpatFreqDeg*2*pi+phase(k)))/Para_Monitor.AmpFactor)/Para_Monitor.GammaFactor); % transform luminance to pixel value                                    texdata2D =repmat([texdata1D(1,:) texdata1D(2,:) texdata1D(3,:)],Winheight,1);                                    tex(k)=Screen('MakeTexture', window, texdata2D);                                end                                                                %show the movie                                                                n=round(Tduring/1000*frames*TempFreq); %  frames                                n_triginit=round(abs(round(Ttriginit/1000*frames*TempFreq)));% # of frames which show the trigger square before starting VS; Ttriginit<=0                                n_trigend=round(Ttrigend/1000*frames*TempFreq);  % # of frames which show the trigger square after finishing VS; Ttrigend>=0                                if dirindex==0                                    movieFrameIndices=mod(0:(n-1),frames) + 1;                                else                                    movieFrameIndices=frames-mod(0:(n-1),frames);                                end                                parachange=3; % repeat without changing parameters                            case 1                                n=round(Tduring/1000*frames*TempFreq); %  frames                                n_triginit=round(abs(round(Ttriginit/1000*frames*TempFreq)));% # of frames which show the trigger square before starting VS; Ttriginit<=0                                n_trigend=round(Ttrigend/1000*frames*TempFreq);  % # of frames which show the trigger square after finishing VS; Ttrigend>=0                                      %                                 movieFrameIndices0=mod(0:(n-1),frames) + 1;%                                 movieFrameIndices1=frames-mod(0:(n-1),frames);                                                                if dirindex==0                                    movieFrameIndices=mod(0:(n-1),frames) + 1;                                else                                    movieFrameIndices=frames-mod(0:(n-1),frames);                                end                                parachange=3; % repeat without changing parameters                            case 2                                break;                            otherwise                        end                        Screen('DrawTexture', window, tex(movieFrameIndices(1)), [], rectwin);                        Screen('DrawTexture', window, trigger_squ(2),[],Para_Trigger.Location);                        Screen('Flip', window);                        tic;                        if ~isempty(comm)                            switch comm                                case 'ESC'                                case 'SFQ'                                    fprintf(udpB,'SFQ updated');                                case 'TFQ'                                    fprintf(udpB,'TFQ updated');                                case 'CON'                                    fprintf(udpB,'CON or MNL updated');                                case 'DRN'                                    fprintf(udpB,'DRN updated');                                case 'TBF'                                    fprintf(udpB,'TBF updated');                                case 'TDR'                                    fprintf(udpB,'TDR updated');                                case 'TAF'                                    fprintf(udpB,'TAF updated');                                case 'TTI'                                    fprintf(udpB,'TTI updated');                                case 'TTE'                                    fprintf(udpB,'TTE updated');                                otherwise                            end                            comm='';                        end                                                while toc<Tbefore/1000                            [mX, mY, buttons] = GetMouse;                            if buttons(2)                                Priority(0);                                 ShowCursor;                                if Synch                                    fprintf(udpB,'Abort VS');                                end                                parachange=2;                                break;                            end                        end                        if parachange==2 %check point                            break;                        end                        %show movie                        for i=1:n_triginit                            Screen('DrawTexture', window, tex(movieFrameIndices(1)), [], rectwin);                                                        Screen('DrawTexture', window, trigger_squ(1),[],Para_Trigger.Location);                            Screen('Flip', window);                            comm=fscanf(udpB,'%c',3);                            if ~isempty(comm)                                switch comm                                    case 'ESC'                                        fprintf(udpB,'Abort VS');                                        parachange=2;                                        break;                                    otherwise                                end                            end                        end                        if parachange==2  % check point                            break;                        end                        for i=1:n                            Screen('DrawTexture', window, tex(movieFrameIndices(i)), [], rectwin);                            Screen('DrawTexture', window, trigger_squ(1),[],Para_Trigger.Location);                            Screen('Flip', window);                            [mX, mY, buttons] = GetMouse;                            if buttons(2)                                Priority(0);                                 ShowCursor;                                if Synch                                    fprintf(udpB,'Abort VS');                                end                                parachange=2;                                break;                            end                            if Synch                                comm=fscanf(udpB,'%c',3);                                if ~isempty(comm)                                    switch comm                                        case 'ESC'                                            fprintf(udpB,'Abort VS');                                            parachange=2;                                        case 'SFQ'                                            SpatFreqDeg=fscanf(udpB,'%f\n')                                            %fprintf(udpB,'SFQ updated');                                            parachange=0;                                        case 'TFQ'                                            TempFreq=fscanf(udpB,'%f\n');                                            %fprintf(udpB,'TFQ updated');                                            parachange=0;                                        case 'CON'                                            temp=fscanf(udpB,'%fMNL%f\n');                                            Contrast=temp(1);                                            MeanLum=temp(2);                                            %fprintf(udpB,'CON updated');                                            parachange=0;                                        case 'DRN'                                            dirindex=fscanf(udpB,'%d\n');                                            %fprintf(udpB,'DRN updated');                                            parachange=1;                                        case 'TBF'                                            Tbefore=fscanf(udpB,'%d\n');                                            %fprintf(udpB,'TBF updated');                                            parachange=1;                                        case 'TDR'                                            Tduring=fscanf(udpB,'%d\n');                                            %fprintf(udpB,'TDR updated');                                            parachange=1;                                        case 'TAF'                                            Tafter=fscanf(udpB,'%d\n');                                            %fprintf(udpB,'TAF updated');                                            parachange=1;                                        case 'TTI'                                            Ttriginit=fscanf(udpB,'%d\n');                                            %fprintf(udpB,'TTI updated');                                            parachange=1;                                        case 'TTE'                                            Ttrigend=fscanf(udpB,'%d\n');                                            %fprintf(udpB,'TTE updated');                                            parachange=1;                                        otherwise                                    end                                    break;                                end                            end                        end%                         if parachange==2 % check point%                             break;%                         end                        for i=1:n_trigend                            Screen('DrawTexture', window, tex(movieFrameIndices(n)), [], rectwin);                            Screen('DrawTexture', window, trigger_squ(1),[],Para_Trigger.Location);                            Screen('Flip', window);                                                    end                        Screen('DrawTexture', window, tex(movieFrameIndices(n)), [], rectwin);                        Screen('DrawTexture', window, trigger_squ(2),[],Para_Trigger.Location);                        Screen('Flip', window);                        WaitSecs(Tafter/1000);                    end  %end of stimulation cycle                                        Priority(0);                     ShowCursor;                    if Synch                        fprintf(udpB,'Finish VS');                    end                    Screen('DrawText',window,'Control computer is ready',0,0,Para_subpanel.maxpixel);                    Screen('Flip', window);                otherwise            end        end    end    fclose(udpB);    delete(udpB);    catch    %this "catch" section executes in case of an error in the "try" section    %above.  Importantly, it closes the onscreen window if its open.    Screen('CloseAll');    Priority(0);    psychrethrow(psychlasterror);    fclose(udpB);    delete(udpB);end %try..catch..